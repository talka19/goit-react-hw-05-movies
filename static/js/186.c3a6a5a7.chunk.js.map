{"version":3,"file":"static/js/186.c3a6a5a7.chunk.js","mappings":"4JAWA,IATe,WACP,OAAO,SAAC,KAAD,CACXA,OAAO,MACPC,MAAM,MACNC,MAAM,OACNC,UAAU,WAEb,C,kHCsCD,UA1CgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,2FACtBF,GAAW,GADW,kBAGEG,EAAAA,EAAAA,aAAiBT,GAHnB,OAGdG,EAHc,OAIpBC,EAAWD,GAJS,gDAMpBO,QAAQC,IAAR,MANoB,yBAQpBL,GAAW,GARS,4EAAH,qDAWrBE,GACD,GAAE,CAACR,KAGF,gCACGK,IAAW,SAAC,IAAD,IACQ,IAAnBF,EAAQS,SACP,0BACE,wBACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QASL,IAAnBd,EAAQS,SACP,wEAIP,C,8DC3CDM,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEVC,EAAa,mCAAG,oGACKF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD9C,cACZE,EADY,yBAEXA,EAASC,KAAKC,SAFH,2CAAH,qDAKbC,EAAoB,mCAAG,WAAMC,GAAN,uFACFP,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,iCAAmEM,EAAnE,gCADE,cACnBJ,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,sDAKpBG,EAAiB,mCAAG,WAAM1B,GAAN,uFACCkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,oBAAsCmB,EAAtC,oBADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKjBK,EAAW,mCAAG,WAAM3B,GAAN,uFACOkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA+CmB,EAA/C,oBADP,cACVE,EADU,yBAETA,EAASC,KAAKM,MAFL,2CAAH,sDAKXC,EAAY,mCAAG,WAAM7B,GAAN,uFACMkB,EAAAA,EAAAA,IAAA,iBAAoBlB,EAApB,4BAA+CmB,EAA/C,2BADN,cACXE,EADW,yBAEVA,EAASC,KAAKC,SAFJ,2CAAH,sDAKZd,EAAM,CACRW,cAAAA,EACAI,qBAAAA,EACAE,kBAAAA,EACAC,YAAAA,EACAE,aAAAA,GAGJ,K","sources":["components/Loader/loader.js","components/Reviews/Reviews.jsx","service/Api.js"],"sourcesContent":["import { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n        return <Oval\n    height=\"100\"\n    width=\"100\"\n    color='grey'\n    ariaLabel='loading'\n  />\n}\n    \nexport default Loader;","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport Api from '../../service/Api';\nimport Loader from 'components/Loader/loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const onActorsOfMovie = async () => {\n      setLoading(true);\n      try {\n        const reviews = await Api.fetchReviews(movieId);\n        setReviews(reviews);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {reviews.length !== 0 && (\n        <div>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\nconst API_KEY = '22a9e3df8a72c1de22ffe1139812da13';\n\nconst fetchTrending = async () => {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n}\n\nconst fetchSearchByKeyword = async keyword => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${keyword}&page=1&include_adult=false`);\n    return response.data.results;\n}\n\nconst fetchMovieDetalis = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n}\n\nconst fetchActors = async movieId => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n}\n\nconst fetchReviews = async movieId => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data.results;\n}\n\nconst Api = {\n    fetchTrending,\n    fetchSearchByKeyword,\n    fetchMovieDetalis,\n    fetchActors ,\n    fetchReviews,\n}\n\nexport default Api\n\n"],"names":["height","width","color","ariaLabel","movieId","useParams","useState","reviews","setReviews","loading","setLoading","useEffect","onActorsOfMovie","Api","console","log","length","map","review","author","content","id","axios","API_KEY","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetalis","fetchActors","cast","fetchReviews"],"sourceRoot":""}